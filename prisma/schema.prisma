// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model User {
  id           Int       @id @default(autoincrement())
  created_at   DateTime  @default(now())
  user_name    String    @unique
  password     String
  email        String
  phone_number String
  role         Role
  customer     Customer?
}

enum Role {
  Customer
  Admin
}

model Customer {
  user           User           @relation(fields: [userId], references: [id])
  userId         Int            @unique
  birthday       DateTime
  sex            Sex
  address        String
  credit_cards   CreditCard[]
  orders         Order[]
  shopping_carts ShoppingCart[]
}

enum Sex {
  Male
  Female
}

model CreditCard {
  id               Int      @id @default(autoincrement())
  customer         Customer @relation(fields: [customerUserId], references: [userId])
  customerUserId   Int
  card_no          String
  security_code    String
  expiration_year  String
  expiration_month String
}

model Product {
  id           Int            @id @default(autoincrement())
  published_at DateTime       @default(now())
  modified_at  DateTime       @default(now())
  title        String
  cetegory     String
  price        Float
  stock        Int
  description  String
  images       String[]
  OrderItem    OrderItem[]
  ShoppingCart ShoppingCart[]
}

model Order {
  id             Int         @id @default(autoincrement())
  customer       Customer    @relation(fields: [customerUserId], references: [userId])
  customerUserId Int
  ordered_at     DateTime    @default(now())
  shipped_at     DateTime    @default(now())
  items          OrderItem[]
}

model OrderItem {
  order           Order?  @relation(fields: [orderId], references: [id])
  orderId         Int
  product         Product @relation(fields: [productId], references: [id])
  productId       Int
  purchased_price Float
  quantity        Int

  @@unique([orderId, productId])
}

model ShoppingCart {
  customer       Customer @relation(fields: [customerUserId], references: [userId])
  customerUserId Int
  product        Product  @relation(fields: [productId], references: [id])
  productId      Int
  quantity       Int

  @@unique([customerUserId, productId])
}
